-- POSTGRES AUTO-GENERATED CREATE-TABLE

-- Table: public.tasks

-- DROP TABLE IF EXISTS public.tasks;

CREATE TABLE IF NOT EXISTS public.tasks
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_on timestamp(6) without time zone NOT NULL,
    deadline timestamp(6) without time zone NOT NULL,
    deleted boolean NOT NULL,
    deleted_on timestamp(6) without time zone,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    identifier character varying(255) COLLATE pg_catalog."default" NOT NULL,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    updated_on timestamp(6) without time zone,
    assigned_user_id bigint NOT NULL,
    CONSTRAINT tasks_pkey PRIMARY KEY (id),
    CONSTRAINT ukk43lthslw8e24mbw9ya95ke8w UNIQUE (identifier),
    CONSTRAINT fk447x172gvsq2ajfbcenhtkhc8 FOREIGN KEY (assigned_user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT tasks_status_check CHECK (status::text = ANY (ARRAY['PENDING'::character varying, 'IN_PROGRESS'::character varying, 'COMPLETED'::character varying]::text[]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tasks
    OWNER to root;
-- Index: idx_tasks_assigned_user_id

-- DROP INDEX IF EXISTS public.idx_tasks_assigned_user_id;

CREATE INDEX IF NOT EXISTS idx_tasks_assigned_user_id
    ON public.tasks USING btree
    (assigned_user_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: idx_tasks_identifier

-- DROP INDEX IF EXISTS public.idx_tasks_identifier;

CREATE INDEX IF NOT EXISTS idx_tasks_identifier
    ON public.tasks USING btree
    (identifier COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: idx_tasks_status

-- DROP INDEX IF EXISTS public.idx_tasks_status;

CREATE INDEX IF NOT EXISTS idx_tasks_status
    ON public.tasks USING btree
    (status COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
    
    
    
    